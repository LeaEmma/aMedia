@page "/generos"

@using System.Net.Http
@using System.Net.Http.Json
@using Data
@using Data.Response

@inject HttpClient Http

<h3>Géneros</h3>

<div class="row">
    <div class="col-2 text-left">
        <a type="button" class="btn btn-primary" href="generos/form">Nuevo</a>
    </div>
</div>

<table class="table tabla-condensed table-striped dataTable no-footer" id="ponchoTable" aria-describedby="ponchoTable_info" role="grid">
    <thead>
        <tr role="row">
            <th>Descripción</th>
            
            <th></th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @if (oRespuesta.Data == null && oRespuesta.Exito == 0)
        {
            <tr role="row" class="odd">
                <td class="sorting_1" colspan="3">
                    <p>Cargando...</p>
                </td>
            </tr>
        }
        @if (oRespuesta != null && oRespuesta.Data != null)
        {
            @foreach (var oElement in oRespuesta.Data)
            {
                <tr role="row" class="odd">
                    <td class="" data-title="Apellido">
                        <p>@oElement.txt_desc</p>
                    </td>
                    <td>
                        <a href="/generos/form/@oElement.cod_genero"><i class="fa fa-edit"> Editar</i></a>
                    </td>
                    <td>
                        <a href="/generos/delete/@oElement.cod_genero"><i class="fa fa-trash"> Eliminar</i></a>
                    </td>
                </tr>
            }
        }
    </tbody>
</table>

@code {
    public string Url = "/api/generos";
    public Respuesta<List<tGenero>> oRespuesta = new Respuesta<List<tGenero>>();

    protected override async Task OnInitializedAsync() =>
        oRespuesta = await Http.GetFromJsonAsync<Respuesta<List<tGenero>>>(Url);
}
